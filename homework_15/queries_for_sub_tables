--CREATE TABLE IF NOT EXISTS breed(
	--breed_id INTEGER PRIMARY KEY AUTOINCREMENT,
	--breed VARCHAR(50))

--INSERT INTO breed (breed)
--SELECT DISTINCT
    --animals.breed
--FROM animals

--CREATE TABLE animal_color (
	--animal_color_id INTEGER PRIMARY KEY AUTOINCREMENT,
	--animal_color VARCHAR(50)
--)

--INSERT INTO animal_color(animal_color)
--SELECT DISTINCT *
--FROM (
    --SELECT DISTINCT
        --color1 as color
    --FROM animals
    --UNION ALL
    --SELECT DISTINCT
        --color2 as color
    --FROM animals)

--DELETE FROM animal_color WHERE animal_color_id = 1

--CREATE TABLE outcome_type (
	--outcome_type_id INTEGER PRIMARY KEY AUTOINCREMENT,
	--outcome_type VARCHAR(50)
--)

--INSERT INTO outcome_type (outcome_type)
--SELECT DISTINCT
   -- animals.outcome_type
--FROM animals

--DELETE FROM outcome_type WHERE outcome_type IS NULL

--CREATE TABLE outcome_subtype (
	--outcome_subtype_id INTEGER PRIMARY KEY AUTOINCREMENT,
	--outcome_subtype VARCHAR(50)
--)

--INSERT INTO outcome_subtype(outcome_subtype)
--SELECT DISTINCT
    --animals.outcome_subtype
--FROM animals

--DELETE FROM outcome_subtype WHERE outcome_subtype IS NULL

--CREATE TABLE age_upon_outcome (
	--age_upon_outcome_id INTEGER PRIMARY KEY AUTOINCREMENT,
	--age_upon_outcome VARCHAR(50)
--)

--INSERT INTO age_upon_outcome(age_upon_outcome)
--SELECT DISTINCT
    --animals.age_upon_outcome
--FROM animals

-- CREATE TABLE animals_redesigned (
-- 	animal_id VARCHAR PRIMARY KEY ,
-- 	name VARCHAR,
-- 	date_of_birth DATE,
-- 	animal_type_id INTEGER,
-- 	breed_id INTEGER,
-- 	color1_id INTEGER,
-- 	color2_id INTEGER,
-- 	age_upon_outcome_id INTEGER,
-- 	outcome_subtype INTEGER,
-- 	outcome_type_id INTEGER,
-- 	outcome_month INTEGER,
-- 	outcome_year INTEGER,
--     FOREIGN KEY (animal_type_id) REFERENCES animal_type(animal_type_id),
--     FOREIGN KEY (breed_id) REFERENCES breed(breed_id),
--     FOREIGN KEY (color1_id) REFERENCES animal_color(animal_color_id),
--     FOREIGN KEY (color2_id) REFERENCES animal_color(animal_color_id),
--     FOREIGN KEY (age_upon_outcome_id) REFERENCES age_upon_outcome(age_upon_outcome_id),
--     FOREIGN KEY (outcome_type_id) REFERENCES outcome_subtype(outcome_subtype),
--     FOREIGN KEY (outcome_type_id) REFERENCES outcome_type(outcome_type_id)
-- )

-- INSERT INTO animals_redesigned (
--                                 animal_id,
--                                 name,
--                                 date_of_birth,
--                                 outcome_month,
--                                 outcome_year
--                                 )
-- FROM animals

-- ALTER TABLE animals_redesigned
-- RENAME COLUMN outcome_subtype to outcome_subtype_id

-- ALTER TABLE animals_redesigned
-- FOREIGN KEY (outcome_type_id) REFERENCES outcome_subtype(outcome_subtype_id)

-- DROP TABLE animals_redesigned

-- CREATE TABLE animal_id
-- (
--     animal_id_key INTEGER PRIMARY KEY AUTOINCREMENT,
--     animal_id     VARCHAR(50)
-- )

-- INSERT INTO animal_id(animal_id)
-- SELECT DISTINCT
--     animals.animal_id
-- FROM animals

-- CREATE TABLE animals_redesigned (
-- 	animal_index VARCHAR PRIMARY KEY ,
-- 	animal_id,
-- 	name VARCHAR,
-- 	date_of_birth DATE,
-- 	animal_type_id INTEGER,
-- 	breed_id INTEGER,
-- 	color1_id INTEGER,
-- 	color2_id INTEGER,
-- 	age_upon_outcome_id INTEGER,
-- 	outcome_subtype_id INTEGER,
-- 	outcome_type_id INTEGER,
-- 	outcome_month INTEGER,
-- 	outcome_year INTEGER,
--     FOREIGN KEY (animal_id) REFERENCES animal_id(animal_id_key),
--     FOREIGN KEY (animal_type_id) REFERENCES animal_type(animal_type_id),
--     FOREIGN KEY (breed_id) REFERENCES breed(breed_id),
--     FOREIGN KEY (color1_id) REFERENCES animal_color(animal_color_id),
--     FOREIGN KEY (color2_id) REFERENCES animal_color(animal_color_id),
--     FOREIGN KEY (age_upon_outcome_id) REFERENCES age_upon_outcome(age_upon_outcome_id),
--     FOREIGN KEY (outcome_subtype_id) REFERENCES outcome_subtype(outcome_subtype_id),
--     FOREIGN KEY (outcome_type_id) REFERENCES outcome_type(outcome_type_id)
-- )

-- INSERT INTO animals_redesigned(date_of_birth)
-- SELECT date_of_birth FROM animals

-- DELETE FROM animals_redesigned WHERE animals_redesigned.animal_id is null
