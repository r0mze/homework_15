-- Создаем таблицу-справочник breed пород животных

CREATE TABLE IF NOT EXISTS breed(
	breed_id INTEGER PRIMARY KEY AUTOINCREMENT,
	breed VARCHAR(50))

-- Вставляем данные в таблицу-справочник breed пород животных из таблицы animals

INSERT INTO breed (breed)
SELECT DISTINCT
    animals.breed
FROM animals

-- Создаем таблицу-справочник animal_color возможных цветов животных

CREATE TABLE animal_color (
	animal_color_id INTEGER PRIMARY KEY AUTOINCREMENT,
	animal_color VARCHAR(50))

-- Вставляем данные в таблицу-справочник animal_color возможных цветов животных из таблицы animals

INSERT INTO animal_color(animal_color)
SELECT DISTINCT *
FROM (
    SELECT DISTINCT
        color1 as color
    FROM animals
    UNION ALL
    SELECT DISTINCT
        color2 as color
    FROM animals)

-- Создаем таблицу-справочник outcome_type вариантов, чем кончилось дело с животным

CREATE TABLE outcome_type (
	outcome_type_id INTEGER PRIMARY KEY AUTOINCREMENT,
	outcome_type VARCHAR(50))

-- Вставляем данные в таблицу-справочник outcome_type чем кончилось дело с животным из таблицы animals

INSERT INTO outcome_type (outcome_type)
SELECT DISTINCT
   animals.outcome_type
FROM animals

-- Создаем таблицу-справочник outcome_subtype подтипа, чем кончилось дело с животным

CREATE TABLE outcome_subtype (
	outcome_subtype_id INTEGER PRIMARY KEY AUTOINCREMENT,
	outcome_subtype VARCHAR(50))

-- Вставляем данные в таблицу-справочник outcome_subtype подтипа, чем кончилось дело с животным из таблицы animals

INSERT INTO outcome_subtype(outcome_subtype)
SELECT DISTINCT
    animals.outcome_subtype
FROM animals

-- Создаем таблицу-справочник age_upon_outcome вариантов возсраста животного на момент исхода

CREATE TABLE age_upon_outcome (
	age_upon_outcome_id INTEGER PRIMARY KEY AUTOINCREMENT,
	age_upon_outcome VARCHAR(50))

-- Вставляем даннык таблицу-справочник age_upon_outcome вариантов возсраста животного на момент исхода из таблицы animals

INSERT INTO age_upon_outcome(age_upon_outcome)
SELECT DISTINCT
    animals.age_upon_outcome
FROM animals

-- Создаем таблицу-справочник animal_id с ID животного (значения не уникальные, повторяются в исходной таблице)

CREATE TABLE animal_id
(
    animal_id_key INTEGER PRIMARY KEY AUTOINCREMENT,
    animal_id     VARCHAR(50)
)

-- Вставляем данные таблицу-справочник animal_id с ID животного

INSERT INTO animal_id(animal_id)
SELECT DISTINCT
    animals.animal_id
FROM animals
